{"version":3,"sources":["../../../src/@ionic-native/plugins/file-opener/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;GAkBG;AASH,IAAa,UAAU;IAAS,8BAAiB;IAAjD;;IA6CA,CAAC;IA3CC;;;;;OAKG;IAMH,yBAAI,GAAJ,UAAK,QAAgB,EAAE,YAAoB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEtE;;;;OAIG;IAMH,8BAAS,GAAT,UAAU,SAAiB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEtD;;;;OAIG;IAMH,mCAAc,GAAd,UAAe,SAAiB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAQ7D,iBAAC;AAAD,CA7CA,AA6CC,CA7C+B,iBAAiB,GA6ChD;AANM,qBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AA/BA;IALC,OAAO,CAAC;QACP,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,SAAS;QACtB,SAAS,EAAE,OAAO;KACnB,CAAC;;;;sCACoE;AAYtE;IALC,OAAO,CAAC;QACP,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,SAAS;QACtB,SAAS,EAAE,OAAO;KACnB,CAAC;;;;2CACoD;AAYtD;IALC,OAAO,CAAC;QACP,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,SAAS;QACtB,SAAS,EAAE,OAAO;KACnB,CAAC;;;;gDACyD;AArChD,UAAU;IARtB,MAAM,CAAC;QACN,UAAU,EAAE,YAAY;QACxB,MAAM,EAAE,6BAA6B;QACrC,SAAS,EAAE,6BAA6B;QACxC,IAAI,EAAE,sDAAsD;QAC5D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC;KAC5D,CAAC;GAEW,UAAU,CA6CtB;SA7CY,UAAU","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name File Opener\r\n * @description\r\n * This plugin will open a file on your device file system with its default application.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { FileOpener } from '@ionic-native/file-opener';\r\n *\r\n * constructor(private fileOpener: FileOpener) { }\r\n *\r\n * ...\r\n *\r\n * this.fileOpener.open('path/to/file.pdf', 'application/pdf')\r\n *   .then(() => console.log('File is opened'))\r\n *   .catch(e => console.log('Error openening file', e));\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'FileOpener',\r\n  plugin: 'cordova-plugin-file-opener2',\r\n  pluginRef: 'cordova.plugins.fileOpener2',\r\n  repo: 'https://github.com/pwlin/cordova-plugin-file-opener2',\r\n  platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\r\n})\r\n\r\nexport class FileOpener extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Open an file\r\n   * @param filePath {string} File Path\r\n   * @param fileMIMEType {string} File MIME Type\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    callbackStyle: 'object',\r\n    successName: 'success',\r\n    errorName: 'error'\r\n  })\r\n  open(filePath: string, fileMIMEType: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Uninstalls a package\r\n   * @param packageId {string}  Package ID\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    callbackStyle: 'object',\r\n    successName: 'success',\r\n    errorName: 'error'\r\n  })\r\n  uninstall(packageId: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Check if an app is already installed\r\n   * @param packageId {string} Package ID\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    callbackStyle: 'object',\r\n    successName: 'success',\r\n    errorName: 'error'\r\n  })\r\n  appIsInstalled(packageId: string): Promise<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}