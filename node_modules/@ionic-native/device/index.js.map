{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/device/index.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM,oBAAoB;AAI5D;;;;;;;;;;;;;;;GAeG;AASH;IAAA;IA2CA,CAAC;IANM,iBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,qBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAvCA;QAAC,eAAe;;2CAAA;IAOhB;QAAC,eAAe;;yCAAA;IAIhB;QAAC,eAAe;;4CAAA;IAIhB;QAAC,eAAe;;wCAAA;IAIhB;QAAC,eAAe;;2CAAA;IAIhB;QAAC,eAAe;;gDAAA;IAIhB;QAAC,eAAe;;6CAAA;IAIhB;QAAC,eAAe;;0CAAA;IA1ClB;QAAC,MAAM,CAAC;YACN,UAAU,EAAE,QAAQ;YACpB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,QAAQ;YACnB,IAAI,EAAE,iDAAiD;YACvD,SAAS,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,CAAC;SAC/H,CAAC;;cAAA;IA6CF,aAAC;AAAD,CAAC,AA3CD,IA2CC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CordovaProperty, Plugin } from '@ionic-native/core';\r\n\r\ndeclare var window: any;\r\n\r\n/**\r\n * @name Device\r\n * @description\r\n * Access information about the underlying device and platform.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { Device } from '@ionic-native/device';\r\n *\r\n * constructor(private device: Device) { }\r\n *\r\n * ...\r\n *\r\n * console.log('Device UUID is: ' + this.device.uuid);\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'Device',\r\n  plugin: 'cordova-plugin-device',\r\n  pluginRef: 'device',\r\n  repo: 'https://github.com/apache/cordova-plugin-device',\r\n  platforms: ['Android', 'BlackBerry 10', 'Browser', 'Firefox OS', 'iOS', 'OS X', 'Tizen', 'Ubuntu', 'Windows', 'Windows Phone']\r\n})\r\n\r\nexport class Device {\r\n\r\n  /** Get the version of Cordova running on the device. */\r\n  @CordovaProperty\r\n  cordova: string;\r\n\r\n  /**\r\n   * The device.model returns the name of the device's model or product. The value is set\r\n   * by the device manufacturer and may be different across versions of the same product.\r\n   */\r\n  @CordovaProperty\r\n  model: string;\r\n\r\n  /** Get the device's operating system name. */\r\n  @CordovaProperty\r\n  platform: string;\r\n\r\n  /** Get the device's Universally Unique Identifier (UUID). */\r\n  @CordovaProperty\r\n  uuid: string;\r\n\r\n  /** Get the operating system version. */\r\n  @CordovaProperty\r\n  version: string;\r\n\r\n  /** Get the device's manufacturer. */\r\n  @CordovaProperty\r\n  manufacturer: string;\r\n\r\n  /** Whether the device is running on a simulator. */\r\n  @CordovaProperty\r\n  isVirtual: boolean;\r\n\r\n  /** Get the device hardware serial number. */\r\n  @CordovaProperty\r\n  serial: string;\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}